name: Package and Release VSIX

on:
  push:
    branches:
      - '**'

jobs:
  release-vsix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Set version based on branch
        id: version
        run: |
          BRANCH="${GITHUB_REF##*/}"
          SAFE_BRANCH=$(echo "$BRANCH" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          BASE=$(node -p "require('./package.json').version.split('-')[0]")
          VERSION="${BASE}-${SAFE_BRANCH}.${GITHUB_RUN_NUMBER}"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          node -e "
            const fs = require('fs');
            const pkg = require('./package.json');
            pkg.version = '$VERSION';
            fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Package VSIX
        run: npx vsce package

      - name: Upload VSIX to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          name: "Release ${{ steps.version.outputs.version }}"
          files: "*.vsix"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
