{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://ctags-code/external commonjs \"level\"","webpack://ctags-code/./src/tagutils.js","webpack://ctags-code/external commonjs \"vscode\"","webpack://ctags-code/./src/extension.js","webpack://ctags-code/./src/dbutils.js","webpack://ctags-code/external node-commonjs \"readline\"","webpack://ctags-code/external node-commonjs \"fs\"","webpack://ctags-code/external node-commonjs \"path\"","webpack://ctags-code/webpack/bootstrap","webpack://ctags-code/webpack/startup"],"sourcesContent":["module.exports = require(\"level\");","const {getValueFromDb, getDB, batchWriteIntoDB} = require('./dbutils');\nconst vscode = require('vscode');\nconst fs = require('fs');\nconst readline = require('readline');\nconst path = require('path');\n\nasync function getPattern(filePath, name, canceller, pattern, matchWhole) {\n    const fileStream = fs.createReadStream(filePath);\n    const rl = readline.createInterface({\n    input: fileStream,\n    crlfDelay: Infinity\n    });\n    let lineNumber = 0\n    let charPos = 0\n    let found = false\n    for await (const line of rl) {\n        lineNumber += 1\n        if ((matchWhole && line === pattern) || line.startsWith(pattern)) {\n            found = true\n            charPos = Math.max(line.indexOf(name), 0)\n            console.log(`ctags-code: Found '${pattern}' at ${lineNumber}:${charPos}`)\n            return {retval:false, found, lineNumber, charPos}\n        } else if (canceller && canceller.isCancellationRequested) {\n            console.log('ctags-code: Cancelled pattern searching')\n            return {retval:false, found, lineNumber, charPos}\n        }\n    }\n}\n\n\nasync function getLineNumber(entry, document, sel, canceller) {\n    if (entry.tagKind === 'F') {\n        return await getFileLineNumber(document, sel)\n    }\n    else {\n        return await getLineNumberPattern(entry, canceller)\n    }\n}\n\nasync function getLineNumberPattern(entry, canceller) {\n    let matchWhole = false\n    let pattern = entry.pattern\n    if (pattern.startsWith(\"^\")) {\n        pattern = pattern.substring(1, pattern.length)\n    } else {\n        console.error(`ctags-code: Unsupported pattern ${pattern}`)\n        return;\n    }\n\n    if (pattern.endsWith(\"$\")) {\n        pattern = pattern.substring(0, pattern.length - 1)\n        matchWhole = true\n    }\n    console.log(pattern);\n    const linedata = await getPattern(entry.file, entry.name, canceller, pattern, matchWhole);\n    console.log(linedata);\n    if (linedata.found) {\n        return new vscode.Selection(linedata.lineNumber - 1, linedata.charPos, linedata.lineNumber - 1, linedata.charPos)\n    }\n}\n\nasync function getFileLineNumber(document, sel) {\n    let pos = sel.end.translate(0, 1)\n    let range = document.getWordRangeAtPosition(pos)\n    if (range) {\n        let text = document.getText(range)\n        if (text.match(/[0-9]+/)) {\n            const lineNumber = Math.max(0, parseInt(text, 10) - 1)\n            let charPos = 0\n\n            pos = range.end.translate(0, 1)\n            range = document.getWordRangeAtPosition(pos)\n            if (range) {\n                text = document.getText(range)\n                if (text.match(/[0-9]+/)) {\n                    charPos = Math.max(0, parseInt(text) - 1)\n                }\n            }\n            console.log(`ctags-code: Resolved file position to line ${lineNumber + 1}, char ${charPos + 1}`)\n            return new vscode.Selection(lineNumber, charPos, lineNumber, charPos)\n        }\n    }\n}\n\nasync function openAndReveal(context, editor, document, sel) {\n    const doc = await vscode.workspace.openTextDocument(document);\n    const showOptions = {\n        viewColumn: editor ? editor.viewColumn : vscode.ViewColumn.One,\n        selection: sel\n    };\n    return await vscode.window.showTextDocument(doc, showOptions);\n}\n\nasync function revealCTags(context, editor, entry) {\n    if (!entry) {\n        return\n    }\n    const document = editor ? editor.document : null\n    const triggeredSel = editor ? editor.selection : null;\n    const sel = await getLineNumber(entry, document, triggeredSel);\n    return openAndReveal(context, editor, entry.file, sel);\n}\n\nfunction getTag(editor) {\n    const tag = editor.document.getText(editor.selection).trim()\n    if (!tag) {\n        const range = editor.document.getWordRangeAtPosition(editor.selection.active);\n        if (range) {\n            return editor.document.getText(range);\n        }\n    }\n    return tag;\n}\n\nasync function jumputil(editor, context, key) {\n    if (!editor) return;\n    if (!key) return;\n    getValueFromDb(key).then(value => {\n  if (value) {\n    console.log('Found:', value);\n    const options = [value].map(tag => {\n                    if (!path.isAbsolute(tag.file)) {\n                        tag.file = path.join(vscode.workspace.rootPath, tag.file)\n                    }\n                    tag.description = \"\"\n                    tag.label = tag.file\n                    tag.detail = tag.pattern\n                    tag.lineNumber = 0\n                    return tag\n                });\n        if (!options.length) {\n            return vscode.window.showInformationMessage(`ctags-code: No tags found for ${tag}`)\n        } else if (options.length === 1) {\n            return revealCTags(context, editor, options[0])\n        } else {\n            return vscode.window.showQuickPick(options).then(opt => {\n                return revealCTags(context, editor, opt)\n            })\n        }\n  } else {\n    console.log('Key not found');\n  }\n});\n}\n\nasync function storeTagsToDB(tagsfile)    {\n    const fileStream = fs.createReadStream(tagsfile);\n    const rl = readline.createInterface({ input: fileStream, crlfDelay: Infinity });\n    const db = getDB();\n\n    const batchSize = 1000;\n    let batchOps = [];\n\n    for await (const line of rl) {\n        if (line.startsWith('!')) continue;\n\n        const parts = line.split('\\t');\n        if (parts.length < 3) continue;\n\n        const [tagName, file, pattern, tagKind] = parts;\n        const matches = [...pattern.matchAll(/\\/(.*?)\\//g)].map(m => m[1]);\n\n        batchOps.push({\n            type: 'put', \n            key: tagName, \n            value: {\n                file,\n                pattern: matches[0],\n                tagKind\n            }\n        });\n\n        if (batchOps.length >= batchSize) {\n            await batchWriteIntoDB(batchOps);\n            batchOps = [];\n        }\n    }\n\n    if (batchOps.length > 0) {\n        await batchWriteIntoDB(batchOps);\n    }\n\n    await db.close();\n    await db.open();\n\n    vscode.window.showInformationMessage('Tags are parsed');\n}\n\nmodule.exports = {jumputil ,getTag, storeTagsToDB};","module.exports = require(\"vscode\");","const vscode = require('vscode');\nconst path = require('path');\nconst {jumputil, getTag, storeTagsToDB} = require('./tagutils');\nconst {initDB, closeDB, getEntriesWithPrefix} = require('./dbutils');\n\nasync function parseAndStoreTags() {\n    storeTagsToDB(path.join(vscode.workspace.rootPath, 'tags'));\n}\n\nasync function handleSearchTagsCommand(context) {\n  const quickPick = vscode.window.createQuickPick();\n  quickPick.placeholder = 'Search tags...';\n  quickPick.matchOnDescription = true;\n\n  quickPick.onDidChangeValue(async (input) => {\n    if (!input) {\n      quickPick.items = [];\n      return;\n    }\n\n    const results = await getEntriesWithPrefix(input);\n    quickPick.items = results.map(item => ({\n      label: item.key,\n      description: item.value.file,\n    }));\n  });\n\n  quickPick.onDidAccept(() => {\n    const selected = quickPick.selectedItems[0];\n    if (selected) {\n      jumputil(vscode.window.activeTextEditor, context, selected.label)\n    }\n    quickPick.hide();\n  });\n\n  quickPick.onDidHide(() => quickPick.dispose());\n  quickPick.show();\n}\n\nasync function jump2tag(context) {\n    const editor = vscode.window.activeTextEditor\n    const tag = getTag(editor)\n    return jumputil(editor, context, tag)\n}\n\nmodule.exports = {\n  activate(context) {\n    initDB();\n    context.subscriptions.push(vscode.commands.registerCommand('extension.storeTags', parseAndStoreTags));\n    context.subscriptions.push(vscode.commands.registerCommand('extension.searchTags', handleSearchTagsCommand));\n    context.subscriptions.push(vscode.commands.registerCommand('extension.jumpTag', jump2tag));\n  },\n  deactivate() {\n    closeDB();\n  }\n};","const path = require('path');\nconst { Level } = require('level');\nconst vscode = require('vscode'); \n\nlet db;\nconst dbpath = path.join(vscode.workspace.rootPath, 'tagsdb')\n\nfunction initDB() {\n  if (!db) {\n    db = new Level(dbpath, { valueEncoding: 'json' });\n  }\n  return db;\n}\n\nfunction getDB() {\n  if (!db) throw new Error('DB is not initialized.');\n  return db;\n}\n\nfunction closeDB() {\n  if (!db) throw new Error('DB is not initialized.');\n  db.close();\n}\n\nasync function getValueFromDb(key) {\n  try {\n    const value = await db.get(key);\n    return value;\n  } catch (err) {\n    if (err.notFound) {\n      return null;\n    } else {\n      throw err;\n    }\n  }\n}\n\n\nasync function getEntriesWithPrefix(prefix, limit = 10) {\n  const entries = [];\n  const iterator = db.iterator({\n    gte: prefix,\n    lte: prefix + '\\xff',\n    keyEncoding: 'utf8',\n    valueEncoding: 'json'\n  });\n\n  try {\n    for await (const [key, value] of iterator) {\n      entries.push({ key, value });\n      if (entries.length >= limit) break;\n    }\n  } catch (err) {\n    console.error('Iterator error:', err);\n    throw err;\n  } finally {\n    await iterator.close();\n  }\n  return entries;\n}\n\nasync function batchWriteIntoDB(data)  {\n  try {\n    await db.batch(data);\n    } catch (err) {\n        console.error('Batch write failed:', err);\n    }\n}\n\nmodule.exports = { initDB, getDB, closeDB, getValueFromDb, getEntriesWithPrefix, batchWriteIntoDB };\n","module.exports = require(\"readline\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["module","exports","require","getValueFromDb","getDB","batchWriteIntoDB","vscode","fs","readline","path","async","revealCTags","context","editor","entry","document","triggeredSel","selection","sel","canceller","tagKind","pos","end","translate","range","getWordRangeAtPosition","text","getText","match","lineNumber","Math","max","parseInt","charPos","console","log","Selection","getFileLineNumber","matchWhole","pattern","startsWith","error","substring","length","endsWith","linedata","filePath","name","fileStream","createReadStream","rl","createInterface","input","crlfDelay","Infinity","found","line","indexOf","retval","isCancellationRequested","getPattern","file","getLineNumberPattern","getLineNumber","doc","workspace","openTextDocument","showOptions","viewColumn","ViewColumn","One","window","showTextDocument","openAndReveal","jumputil","key","then","value","options","map","tag","isAbsolute","join","rootPath","description","label","detail","showQuickPick","opt","showInformationMessage","getTag","trim","active","storeTagsToDB","tagsfile","db","batchOps","parts","split","tagName","matches","matchAll","m","push","type","close","open","initDB","closeDB","getEntriesWithPrefix","parseAndStoreTags","handleSearchTagsCommand","quickPick","createQuickPick","placeholder","matchOnDescription","onDidChangeValue","items","results","item","onDidAccept","selected","selectedItems","activeTextEditor","hide","onDidHide","dispose","show","jump2tag","activate","subscriptions","commands","registerCommand","deactivate","Level","dbpath","valueEncoding","Error","get","err","notFound","prefix","limit","entries","iterator","gte","lte","keyEncoding","data","batch","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}